name: Portfolio Feedback

on:
  push:
    branches:
      - main
      - develop
      - feat/**
      - fix/**
      - chore/**
      - docs/**
      - style/**
      - refactor/**
     

jobs:
  feedback:
    if: ${{!contains(github.event.head_commit.message, '[skip ci]')}}
    runs-on: ubuntu-latest

    steps:
      # 1. Récupération du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour vérifier tous les commits

      # 2. Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Installation des outils nécessaires
      - name: Install linters and dependencies
        run: |
          npm install -g htmlhint stylelint @commitlint/cli @commitlint/config-conventional

      # 4. Vérification du HTML avec HTMLHint
      - name: Run HTMLHint
        run: |
          htmlhint "**/*.html" > html-report.txt || true

      # 5. Vérification du CSS avec Stylelint
      - name: Run Stylelint
        run: |
          stylelint "**/*.css" > css-report.txt || true

      # 6. Vérification des messages de commit avec Commitlint
      - name: Run Commitlint
        run: |
          npx commitlint --from=origin/main --to=HEAD > commit-report.txt || true

      # 7. Vérification W3C
      - name: Setup W3C Validator
        run: |
          wget https://github.com/validator/validator/releases/download/20.6.30/vnu.jar
      - name: Run W3C Validator
        run: |
          java -jar vnu.jar --format json **/*.html > w3c-report.json || true

      # 8. Génération du feedback initial
      - name: Generate Initial Feedback
        run: |
          echo "# 📋 Feedback Automatique" > feedback.md
          echo "" >> feedback.md
          echo "## 🔍 Résultats des Analyses" >> feedback.md
          echo "" >> feedback.md
          echo "### HTML" >> feedback.md
          cat html-report.txt >> feedback.md || echo "✅ Aucun problème détecté dans le HTML." >> feedback.md
          echo "" >> feedback.md
          echo "### CSS" >> feedback.md
          cat css-report.txt >> feedback.md || echo "✅ Aucun problème détecté dans le CSS." >> feedback.md
          echo "" >> feedback.md
          echo "### Messages de Commit" >> feedback.md
          cat commit-report.txt >> feedback.md || echo "✅ Tous les messages de commit sont conformes." >> feedback.md
          echo "" >> feedback.md
          echo "### Validation W3C" >> feedback.md
          cat w3c-report.json >> feedback.md || echo "✅ Validation W3C réussie." >> feedback.md

      # 9. Reformulation du feedback avec ton script
      - name: Parse Feedback with Custom Script
        run: |
          node feedback-parser.js

      # 10. Commit et push du feedback
      - name: Commit Feedback
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "actions@github.com"
          git add feedback.md
          git commit -m "chore: mise à jour du feedback automatique [skip ci]" || echo "Aucun changement à commiter."
          git push
